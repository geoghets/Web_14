{"mappings":"ACCA,MAAM,EAAQ,IAAI,MAAM,KAAxB,CACM,EAAS,IAAI,MAAM,iBAAA,CAAkB,GAAI,OAAO,UAAA,CAAa,OAAO,WAAA,CAAa,GAAK,KACtF,EAAW,IAAI,MAAM,aAA3B,CACA,SAAS,cAAA,CAAe,oBAAoB,WAAA,CAAY,EAAS,UAAjE,EAGA,MAAM,EAAiB,KACrB,EAAO,MAAA,CAAS,AAAC,CAAA,OAAO,UAAA,CAAW,GAAA,EAAQ,OAAO,WAAlD,CACA,EAAO,sBAAP,GACA,EAAS,OAAA,CAAQ,OAAO,UAAA,CAAW,IAAK,OAAO,WAA/C,CACF,EA6BA,AA1Ba,CAAA,KAEX,IAAM,EAAW,IAAI,MAAM,WAA3B,CACM,EAAW,IAAI,MAAM,iBAAA,CAAkB,CAAE,MAAO,KAAS,GACzD,EAAO,IAAI,MAAM,IAAA,CAAK,EAAU,GACtC,EAAM,GAAA,CAAI,GAGV,EAAO,QAAA,CAAS,CAAA,CAAI,EAGpB,IAGA,IAAM,EAAU,KACd,sBAAsB,GACtB,EAAK,QAAA,CAAS,CAAA,EAAK,IACnB,EAAK,QAAA,CAAS,CAAA,EAAK,IACnB,EAAS,MAAA,CAAO,EAAO,EACzB,EAGA,GACF,CAAA,IAMA,OAAO,gBAAA,CAAiB,SAAU","sources":["<anon>","main.js"],"sourcesContent":["// Set up the scene, camera, and renderer\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer();\ndocument.getElementById(\"canvas-container\").appendChild(renderer.domElement);\n// Function to handle window resize\nconst onWindowResize = ()=>{\n    camera.aspect = (window.innerWidth - 400) / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth - 400, window.innerHeight);\n};\n// Function to initialize the scene\nconst init = ()=>{\n    // Create a spinning cube\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n        color: 0x00ff00\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    // Position the camera\n    camera.position.z = 5;\n    // Call the resize function to set the initial size\n    onWindowResize();\n    // Animate the cube rotation\n    const animate = ()=>{\n        requestAnimationFrame(animate);\n        cube.rotation.x += 0.01;\n        cube.rotation.y += 0.01;\n        renderer.render(scene, camera);\n    };\n    // Start the animation loop\n    animate();\n};\n// Call the init function to set up the scene\ninit();\n// Listen for window resize events\nwindow.addEventListener(\"resize\", onWindowResize);\n\n//# sourceMappingURL=index.8b3ce9f6.js.map\n","// Set up the scene, camera, and renderer\r\nconst scene = new THREE.Scene();\r\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\nconst renderer = new THREE.WebGLRenderer();\r\ndocument.getElementById(\"canvas-container\").appendChild(renderer.domElement);\r\n\r\n// Function to handle window resize\r\nconst onWindowResize = () => {\r\n  camera.aspect = (window.innerWidth-400) / (window.innerHeight) ;\r\n  camera.updateProjectionMatrix();\r\n  renderer.setSize(window.innerWidth-400, window.innerHeight);\r\n};\r\n\r\n// Function to initialize the scene\r\nconst init = () => {\r\n  // Create a spinning cube\r\n  const geometry = new THREE.BoxGeometry();\r\n  const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n  const cube = new THREE.Mesh(geometry, material);\r\n  scene.add(cube);\r\n\r\n  // Position the camera\r\n  camera.position.z = 5;\r\n\r\n  // Call the resize function to set the initial size\r\n  onWindowResize();\r\n\r\n  // Animate the cube rotation\r\n  const animate = () => {\r\n    requestAnimationFrame(animate);\r\n    cube.rotation.x += 0.01;\r\n    cube.rotation.y += 0.01;\r\n    renderer.render(scene, camera);\r\n  };\r\n\r\n  // Start the animation loop\r\n  animate();\r\n};\r\n\r\n// Call the init function to set up the scene\r\ninit();\r\n\r\n// Listen for window resize events\r\nwindow.addEventListener(\"resize\", onWindowResize);\r\n"],"names":["scene","THREE","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","document","getElementById","appendChild","domElement","onWindowResize","aspect","updateProjectionMatrix","setSize","init","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","addEventListener"],"version":3,"file":"index.8b3ce9f6.js.map"}